{"ast":null,"code":"var _jsxFileName = \"D:\\\\TEST\\\\ReactAxiosBlog-master\\\\src\\\\App.js\";\nimport React from 'react';\nimport './App.css';\nimport axios from 'axios';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      id: '',\n      title: '',\n      body: '',\n      data: []\n    };\n\n    this.changeId = e => {\n      let id = e.target.value;\n      this.setState({\n        id: id\n      });\n    };\n\n    this.changeTitle = e => {\n      let title = e.target.value;\n      this.setState({\n        title: title\n      });\n    };\n\n    this.changeBody = e => {\n      let body = e.target.value;\n      this.setState({\n        body: body\n      });\n    };\n\n    this.editPost = (postIndex, title, body) => {\n      this.setState({\n        id: postIndex + 1,\n        title: title,\n        body: body\n      });\n    };\n\n    this.addOrUpdatePost = e => {\n      e.preventDefault();\n\n      if (this.state.title === '' || this.state.body === '' || this.state.id === '') {\n        alert('No field should be empty');\n        return;\n      } else if (this.state.id > this.state.data.length + 1) {\n        alert('Please use the next id');\n      } else {\n        if (this.state.data[this.state.id - 1] !== undefined) {\n          axios.put(`https://jsonplaceholder.typicode.com/posts/${this.state.id}`, {\n            id: this.state.id,\n            title: this.state.title,\n            body: this.state.body\n          }).then(res => {\n            let updatedData = [...this.state.data];\n            updatedData[this.state.id - 1] = res.data;\n            this.setState({\n              id: updatedData.length + 1,\n              title: '',\n              body: '',\n              data: updatedData\n            });\n            console.log(res);\n          }).catch(err => console.log(err));\n        } else {\n          axios.post(\"https://jsonplaceholder.typicode.com/posts\", {\n            id: this.state.id + 1,\n            title: this.state.title,\n            body: this.state.body\n          }).then(res => {\n            console.log(res);\n            let newPost = res.data;\n            let newData = [...this.state.data, newPost];\n            this.setState({\n              id: this.state.id + 1,\n              title: '',\n              body: '',\n              data: newData\n            });\n          }).catch(err => console.log(err));\n        }\n      }\n    };\n\n    this.deletePost = postIndex => {\n      axios.delete(`https://jsonplaceholder.typicode.com/posts/${postIndex}`).then(res => {\n        let newData = [...this.state.data];\n        newData.splice(postIndex, 1);\n        this.setState({\n          id: newData.length + 1,\n          title: '',\n          body: '',\n          data: newData\n        });\n        console.log(res);\n      }).catch(err => console.log(err));\n    };\n  }\n\n  componentDidMount() {\n    axios.get('https://jsonplaceholder.typicode.com/posts').then(res => {\n      let newData = res.data.slice(0, 5);\n      this.setState({\n        id: newData[newData.length - 1].id + 1,\n        data: newData\n      }, () => console.log(this.state.id));\n      console.log(newData);\n    }).catch(err => console.log(\"Couldn't fetch data. Error: \" + err));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"ArticleContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"Simple blog with React\"), React.createElement(\"div\", {\n      className: \"AddArticle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"b\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"id of article: \"), React.createElement(\"input\", {\n      type: \"number\",\n      onChange: this.changeId,\n      value: this.state.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }), React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      onChange: this.changeTitle,\n      type: \"text\",\n      placeholder: \"Title\",\n      value: this.state.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }), React.createElement(\"textarea\", {\n      onChange: this.changeBody,\n      placeholder: \"Enter Body\",\n      value: this.state.body,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      onClick: this.addOrUpdatePost,\n      type: \"submit\",\n      value: \"Add/Update Post\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }))), this.state.data.length === 0 ? React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"Loading Posts...\") : this.state.data.map((post, index) => React.createElement(\"article\", {\n      key: index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, index + 1, \". \", post.title), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, post.body.substr(0, 100), \"...\"), React.createElement(\"button\", {\n      onClick: () => this.deletePost(index),\n      className: \"delete\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, \"Delete\"), React.createElement(\"button\", {\n      onClick: () => this.editPost(index, post.title, post.body),\n      className: \"edit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, \"Edit\"))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:/TEST/ReactAxiosBlog-master/src/App.js"],"names":["React","axios","App","Component","state","id","title","body","data","changeId","e","target","value","setState","changeTitle","changeBody","editPost","postIndex","addOrUpdatePost","preventDefault","alert","length","undefined","put","then","res","updatedData","console","log","catch","err","post","newPost","newData","deletePost","delete","splice","componentDidMount","get","slice","render","map","index","substr"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport './App.css';\r\nimport axios from 'axios';\r\n\r\nclass App extends React.Component {\r\n\r\n  state = {\r\n    id: '',\r\n    title: '',\r\n    body: '',\r\n    data: []\r\n  }\r\n\r\n  changeId = e => {\r\n    let id = e.target.value;\r\n    this.setState({\r\n      id: id\r\n    })\r\n  }\r\n  \r\n  changeTitle = e => {\r\n    let title = e.target.value;\r\n    this.setState({\r\n      title: title\r\n    })\r\n  }\r\n\r\n  changeBody = e => {\r\n    let body = e.target.value;\r\n    this.setState({\r\n      body: body\r\n    })\r\n  }\r\n\r\n  editPost = (postIndex, title, body) => {\r\n    this.setState({\r\n      id: postIndex + 1,\r\n      title: title,\r\n      body: body\r\n    })\r\n\r\n  }\r\n\r\n  addOrUpdatePost = e => {\r\n    e.preventDefault();\r\n    if(this.state.title === '' || this.state.body === '' || this.state.id === '') {\r\n      alert('No field should be empty');\r\n      return;\r\n    } else if(this.state.id > this.state.data.length + 1) { \r\n      alert('Please use the next id');\r\n    } else {\r\n      if(this.state.data[this.state.id - 1] !== undefined) {\r\n        axios.put(`https://jsonplaceholder.typicode.com/posts/${this.state.id}`, {\r\n          id: this.state.id ,\r\n          title: this.state.title,\r\n          body: this.state.body\r\n        }).then(res => {\r\n          let updatedData = [...this.state.data];\r\n          updatedData[this.state.id - 1] = res.data;\r\n          this.setState({\r\n            id: updatedData.length + 1,\r\n            title: '',\r\n            body: '',\r\n            data: updatedData\r\n          })\r\n          console.log(res)\r\n        })\r\n        .catch(err => console.log(err));\r\n      } else {\r\n      axios.post(\"https://jsonplaceholder.typicode.com/posts\", {\r\n        id: this.state.id + 1,\r\n        title: this.state.title,\r\n        body: this.state.body\r\n      })\r\n      .then(res => {\r\n        console.log(res);\r\n        let newPost = res.data;\r\n        let newData = [...this.state.data, newPost];\r\n        this.setState({\r\n          id: this.state.id + 1,\r\n          title: '',\r\n          body: '',\r\n          data: newData\r\n        });\r\n      })\r\n      .catch(err => console.log(err));\r\n      }\r\n    }\r\n  }\r\n\r\n  deletePost = postIndex => {\r\n    axios.delete(`https://jsonplaceholder.typicode.com/posts/${postIndex}`)\r\n    .then(res => {\r\n      let newData = [...this.state.data];\r\n      newData.splice(postIndex, 1);\r\n      this.setState({\r\n        id: newData.length + 1,\r\n        title: '',\r\n        body: '',\r\n        data: newData\r\n      })\r\n      console.log(res)\r\n    })\r\n    .catch(err => console.log(err));\r\n  }\r\n  \r\n  componentDidMount() {\r\n    axios.get('https://jsonplaceholder.typicode.com/posts')\r\n    .then(res => {\r\n      let newData = res.data.slice(0,5);\r\n      this.setState({\r\n        id: newData[newData.length - 1].id + 1,\r\n        data: newData\r\n      }, () => console.log(this.state.id))\r\n      console.log(newData)\r\n    })\r\n    .catch(err => console.log(\"Couldn't fetch data. Error: \" + err))\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div className='ArticleContainer'>\r\n        <h1>Simple blog with React</h1>\r\n        <div className='AddArticle'>\r\n          <b>id of article: </b>\r\n          <input type='number' onChange={this.changeId} value={this.state.id} />\r\n          <form>\r\n          <input onChange={this.changeTitle} type='text' placeholder='Title' value={this.state.title} />\r\n          <textarea onChange={this.changeBody} placeholder='Enter Body' value={this.state.body}>\r\n          </textarea>\r\n          <input onClick={this.addOrUpdatePost} type='submit' value='Add/Update Post'/>\r\n          </form>\r\n        </div>\r\n        {\r\n          this.state.data.length === 0 ?\r\n            <p>Loading Posts...</p>\r\n          :\r\n            this.state.data.map((post, index) => (\r\n              <article key={index}>\r\n                <h2>{index + 1}. {post.title}</h2>\r\n                <p>{post.body.substr(0, 100)}...</p>\r\n                <button onClick={() => this.deletePost(index)} className='delete'>Delete</button>\r\n                <button onClick={() => this.editPost(index, post.title, post.body)} className='edit'>Edit</button>\r\n              </article>\r\n            ))\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n  \r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}